/*
 * generated by Xtext 2.10.0
 */
package edu.kit.ipd.sdq.kamp.ruledsl

import com.google.inject.Binder
import com.google.inject.name.Names
import edu.kit.ipd.sdq.kamp.ruledsl.linking.KampRuleLanguageLinkingService
import edu.kit.ipd.sdq.kamp.ruledsl.scoping.KampRuleLanguageGlobalScopeProvider
import edu.kit.ipd.sdq.kamp.ruledsl.scoping.KampRuleLanguageScopeProviderDelegate
import org.eclipse.xtext.scoping.IScopeProvider
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider
import tools.vitruv.dsls.mirbase.scoping.MirBaseQualifiedNameConverter

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class KampRuleLanguageRuntimeModule extends AbstractKampRuleLanguageRuntimeModule {
	override bindIGlobalScopeProvider() {
		return KampRuleLanguageGlobalScopeProvider
	}
	
	override configureIScopeProviderDelegate(Binder binder) {
		binder.bind(IScopeProvider)
		      .annotatedWith(Names.named(AbstractDeclarativeScopeProvider.NAMED_DELEGATE))
		      .to(KampRuleLanguageScopeProviderDelegate);
	}
	
	override bindIQualifiedNameConverter() {
		return MirBaseQualifiedNameConverter
	}
	
	override bindILinkingService() {
		return KampRuleLanguageLinkingService
	}
	
}
